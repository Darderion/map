package com.github.darderion.mundaneassignmentpolice.utils.codeDetector

class CodeDetectorDataBase {
    companion object {
        internal val keywords = listOf(
            // Common
            "true",
            "false",
            "True",
            "False",
            "int",
            "double",
            "string",
            "char",
            "continue",
            "break",
            "if",
            "elif",
            "else",
            "then",
            "for",
            "to",
            "while",
            "null",
            "Null",
            "NULL",
            "return",
            "enum",
            "var",
            "val",
            "yield",
            "switch",
            "case",
            "auto",
            "try",
            "catch",
            "class",
            "do",
            "double",
            "default",
            "long",
            "public",
            "private",
            "protected",
            "sealed",
            "throw",
            "import",
            "export",
            "super",
            "static",
            "let",
            "new",
            "const",
            "this",
            "finally",
            "implicit",
            "explicit",
            "fun",
            "function",
            "in",
            "when",
            "is",
            "and",
            "or",
            "as",
            "object",
            "from",
            "except",
            "exception",
            "with",
            "yield",
            "end",
            "include",
            "match",
            "module",
            "define",

            // Kotlin
            "by",
            "data",
            "listOf",
            "mutableListOf",
            "setOf",
            "mutableSetOf",

            // Python
            "assert",
            "async",
            "await",
            "def",
            "del",
            "global",
            "lambda",
            "map",
            "nonlocal",
            "not",
            "pass",
            "raise",
            "__main__",
            "__init__",
            "__name__",

            // SQL
            "SELECT",
            "INSERT",
            "UPDATE",
            "DELETE",
            "FROM",
            "WHERE",
            "INTO",
            "VALUES",
            "JOIN",
            "ON",
            "CREATE",
            "ALTER",
            "DROP",
            "GRANT",
            "REVOKE",
            "COMMIT",
            "ROLLBACK",
            "CONSTRAINT",
            "PRIMARY",
            "FOREIGN",
            "KEY",
            "INDEX",
            "UPDATE",
            "SELECT",
            "ALTER",
            "CREATE",
            "ON",
            "UNIQUE",
            "KEY",
            "CONSTRAINT",
            "PRIMARY",
            "TABLE",
            "VIEW",
            "DATABASE",
            "TRIGGER",
            "PROCEDURE",
            "STORED",
            "RETURNS",
            "IF",
            "ELSE",
            "CASE",
            "WHEN",
            "THEN",
            "END",
            "GROUP",
            "BY",
            "HAVING",
            "ORDER",
            "ASC",
            "DESC",
            "LIMIT",
            "OFFSET",
            "IN",
            "LIKE",
            "REGEXP",
            "NOT",
            "EXISTS",
            "AS",

            // Assembly
            "lds",
            "les",
            "lfs",
            "lgs",
            "lss",
            "pop",
            "push",
            "in",
            "ins",
            "out",
            "outs",
            "lahf",
            "sahf",
            "popf",
            "pushf",
            "cmc",
            "clc",
            "stc",
            "cli",
            "sti",
            "cld",
            "std",
            "add",
            "adc",
            "sub",
            "sbb",
            "cmp",
            "inc",
            "dec",
            "test",
            "sal",
            "shl",
            "sar",
            "shr",
            "shld",
            "shrd",
            "not",
            "neg",
            "bound",
            "and",
            "or",
            "xor",
            "imul",
            "mul",
            "div",
            "idiv",
            "cbtw",
            "cwtl",
            "cwtd",
            "cltd",
            "daa",
            "das",
            "aaa",
            "aas",
            "aam",
            "aad",
            "wait",
            "fwait",
            "movs",
            "cmps",
            "stos",
            "lods",
            "scas",
            "xlat",
            "rep",
            "repnz",
            "repz",
            "lcall",
            "call",
            "ret",
            "lret",
            "enter",
            "leave",
            "jcxz",
            "loop",
            "loopnz",
            "loopz",
            "jmp",
            "ljmp",
            "int",
            "into",
            "iret",
            "sldt",
            "str",
            "lldt",
            "ltr",
            "verr",
            "verw",
            "sgdt",
            "sidt",
            "lgdt",
            "lidt",
            "smsw",
            "lmsw",
            "lar",
            "lsl",
            "clts",
            "arpl",
            "bsf",
            "bsr",
            "bt",
            "btc",
            "btr",
            "bts",
            "cmpxchg",
            "fsin",
            "fcos",
            "fsincos",
            "fld",
            "fldcw",
            "fldenv",
            "fprem",
            "fucom",
            "fucomp",
            "fucompp",
            "lea",
            "mov",
            "movw",
            "movsx",
            "movzb",
            "popa",
            "pusha",
            "rcl",
            "rcr",
            "rol",
            "ror",
            "setcc",
            "bswap",
            "xadd",
            "xchg",
            "wbinvd",
            "invd",
            "invlpg",
            "lock",
            "nop",
            "hlt",
            "fld",
            "fst",
            "fstp",
            "fxch",
            "fild",
            "fist",
            "fistp",
            "fbld",
            "fbstp",
            "fadd",
            "faddp",
            "fiadd",
            "fsub",
            "fsubp",
            "fsubr",
            "fsubrp",
            "fisubrp",
            "fisubr",
            "fmul",
            "fmulp",
            "fimul",
            "fdiv",
            "fdivp",
            "fdivr",
            "fdivrp",
            "fidiv",
            "fidivr",
            "fsqrt",
            "fscale",
            "fprem",
            "frndint",
            "fxtract",
            "fabs",
            "fchs",
            "fcom",
            "fcomp",
            "fcompp",
            "ficom",
            "ficomp",
            "ftst",
            "fxam",
            "fptan",
            "fpatan",
            "f2xm1",
            "fyl2x",
            "fyl2xp1",
            "fldl2e",
            "fldl2t",
            "fldlg2",
            "fldln2",
            "fldpi",
            "fldz",
            "finit",
            "fnint",
            "fnop",
            "fsave",
            "fnsave",
            "fstew",
            "fnstew",
            "fstenv",
            "fnstenv",
            "fstsw",
            "fnstsw",
            "frstor",
            "fclex",
            "fnclex",
            "fdecstp",
            "ffree",
            "fincstp",
            "DB",
            "DW",
            "DD",
            "DS",
            "ORG",
            "EQU",
            "SECTION",
            "SEGMENT",
            "MOV",
            "ADD",
            "SUB",
            "CMP",
            "JMP",
            "JE",
            "JNE",
            "INC",
            "DEC",
            "AND",
            "OR",
            "XOR",
            "NOT",
            "CALL",
            "RET",
            "PUSH",
            "POP",

            // OCaml
            "begin",
            "constraint",
            "done",
            "downto",
            "exception",
            "external",
            "functor",
            "inherit",
            "initializer",
            "lazy",
            "method",
            "mutable",
            "of",
            "open",
            "rec",
            "sig",
            "virtual",
            "assert",

            // Scala
            "abstract",
            "case",
            "catch",
            "def",
            "extends",
            "final",
            "forSome",
            "implicit",
            "lazy",
            "override",
            "package",
            "protected",
            "trait",

            // F#
            "downcast",
            "rec",
            "upcast",

            // Haskell
            "data",
            "deriving",
            "infixl",
            "infixr",
            "newtype",
            "of",

            // Fortran
            "PROGRAM",
            "MODULE",
            "SUBROUTINE",
            "FUNCTION",
            "END",
            "IF",
            "THEN",
            "ELSE",
            "DO",
            "CONTINUE",
            "REAL",
            "INTEGER",
            "DOUBLE",
            "COMPLEX",
            "CHARACTER",
            "LOGICAL",
            "COMMON",
            "EQUIVALENCE",
            "DATA",
            "READ",
            "PRINT",
            "FORMAT",
            "GOTO",

            //  C
//            "extern",
//            "goto",
//            "pragma",
//            "register",
//            "signed",
//            "unsigned",
//            "sizeof",
//            "typedef",
//            "union",
//            "volatile",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "int",
            "long",
            "register",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "inline",
            "restrict",
            "_Alignas",
            "_Alignof",
            "_Atomic",
            "_Generic",
            "_Noreturn",
            "_Static_assert",
            "_Thread_local",
            "alignas",
            "alignof",
            "bool",
            "constexpr",
            "false",
            "nullptr",
            "static_assert",
            "thread_local",
            "true",
            "typeof",
            "typeof_unqual",
            "_Decimal128",
            "_Decimal32",
            "_Decimal64",

            // C++


            "alignas",
            "alignof",
            "and",
            "and_eq",
            "asm",
            "auto",
            "bitand",
            "bitor",
            "bool",
            "break",
            "case",
            "catch",
            "char",
            "char8_t",
            "char16_t",
            "char32_t",
            "class",
            "compl",
            "concept",
            "const",
            "const_cast",
            "consteval",
            "constexpr",
            "constinit",
            "continue",
            "co_await",
            "co_return",
            "co_yield",
            "decltype",
            "default",
            "delete",
            "do",
            "double",
            "dynamic_cast",
            "else",
            "enum",
            "explicit",
            "export",
            "extern",
            "false",
            "float",
            "for",
            "friend",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "mutable",
            "namespace",
            "new",
            "noexcept",
            "not",
            "not_eq",
            "nullptr",
            "operator",
            "or",
            "or_eq",
            "private",
            "protected",
            "public",
            "register",
            "reinterpret_cast",
            "requires",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "static_assert",
            "static_cast",
            "struct",
            "switch",
            "template",
            "this",
            "thread_local",
            "throw",
            "true",
            "try",
            "typedef",
            "typeid",
            "typename",
            "union",
            "unsigned",
            "using",
            "using",
            "virtual",
            "void",
            "volatile",
            "wchar_t",
            "while",
            "xor",
            "xor_eq",

            // JavaScript
            "abstract",
            "arguments",
            "await*",
            "boolean",
            "break",
            "byte",
            "case",
            "catch",
            "char",
            "class*",
            "const*",
            "continue",
            "debugger",
            "default",
            "delete",
            "do",
            "double",
            "else",
            "enum*",
            "eval",
            "export*",
            "extends*",
            "false",
            "final",
            "finally",
            "float",
            "for",
            "function",
            "goto",
            "if",
            "implements",
            "import*",
            "in",
            "instanceof",
            "int",
            "interface",
            "let*",
            "long",
            "native",
            "new",
            "null",
            "package",
            "private",
            "protected",
            "public",
            "return",
            "short",
            "static",
            "super*",
            "switch",
            "synchronized",
            "this",
            "throw",
            "throws",
            "transient",
            "true",
            "try",
            "typeof",
            "var",
            "void",
            "volatile",
            "while",
            "with",
            "yield",

            // C#
            "abstract",
            "as",
            "base",
            "bool",
            "break",
            "byte",
            "case",
            "catch",
            "char",
            "checked",
            "class",
            "const",
            "continue",
            "decimal",
            "default",
            "delegate",
            "do",
            "double",
            "else",
            "enum",
            "event",
            "explicit",
            "extern",
            "false",
            "finally",
            "fixed",
            "float",
            "for",
            "foreach",
            "goto",
            "if",
            "implicit",
            "in",
            "int",
            "interface",
            "internal",
            "is",
            "lock",
            "long",
            "namespace",
            "new",
            "null",
            "object",
            "operator",
            "out",
            "override",
            "params",
            "private",
            "protected",
            "public",
            "readonly",
            "ref",
            "return",
            "sbyte",
            "sealed",
            "short",
            "sizeof",
            "stackalloc",
            "static",
            "string",
            "struct",
            "switch",
            "this",
            "throw",
            "true",
            "try",
            "typeof",
            "uint",
            "ulong",
            "unchecked",
            "unsafe",
            "ushort",
            "using",
            "virtual",
            "void",
            "volatile",
            "while",
            "add",
            "and",
            "alias",
            "ascending",
            "args",
            "async",
            "await",
            "by",
            "descending",
            "dynamic",
            "equals",
            "file",
            "from",
            "get",
            "global",
            "group",
            "init",
            "into",
            "join",
            "let",
            "managed",
            "nameof",
            "nint",
            "not",
            "notnull",
            "nuint",
            "on",
            "or",
            "orderby",
            "partial",
            "partial",
            "record",
            "remove",
            "required",
            "scoped",
            "select",
            "set",
            "unmanaged",
            "unmanaged",
            "value",
            "var",
            "when",
            "where",
            "where",
            "with",
            "yield",

            // TypeScript
            "break",
            "case",
            "catch",
            "class",
            "const",
            "continue",
            "debugger",
            "default",
            "delete",
            "do",
            "else",
            "enum",
            "export",
            "extends",
            "false",
            "finally",
            "for",
            "function",
            "if",
            "import",
            "in",
            "instanceof",
            "new",
            "null",
            "return",
            "super",
            "switch",
            "this",
            "throw",
            "true",
            "try",
            "typeof",
            "var",
            "void",
            "while",
            "with",
            "as",
            "implements",
            "interface",
            "let",
            "package",
            "private",
            "protected",
            "public",
            "static",
            "yield",
            "any",
            "boolean",
            "constructor",
            "declare",
            "get",
            "module",
            "require",
            "number",
            "set",
            "string",
            "symbol",
            "type",
            "from",
            "of",

            // Ruby
            "BEGIN",
            "END",
            "defined",
            "elsif",
            "ensure",
            "next",
            "nil",
            "redo",
            "rescue",
            "retry",
            "self",
            "undef",
            "unless",
            "until",
            "__FILE__",
            "__LINE__",

            // Java
            "abstract",
            "assert",
            "boolean",
            "byte",
            "extends",
            "final",
            "implements",
            "instanceof",
            "native",
            "package",
            "synchronized",
            "throws",
            "transient",
            "volatile",
            "opens",
            "module",
            "exports",
            "non-sealed",
            "permits",
            "provides",
            "record",
            "requires",
            "transitive",
            "uses",

            // Rust
            "async",
            "crate",
            "dyn",
            "fn",
            "impl",
            "loop",
            "mod",
            "move",
            "mut",
            "pub",
            "ref",
            "trait",
            "where",

            // Bash
            "alias",
            "ag",
            "bind",
            "cd",
            "command",
            "dirs",
            "disown",
            "echo",
            "eval",
            "exec",
            "fg",
            "getops",
            "hash",
            "logout",
            "popd",
            "printf",
            "pushd",
            "shift",
            "shopt",
            "source",
            "suspend",
            "test",
            "times",
            "trap",
            "typeset",
            "ulimit",
            "umask",
            "unalias",
            "unset",

            // Pascal
            "array",
            "div",
            "file",
            "label",
            "mod",
            "nil",
            "packed",
            "procedure",
            "program",
            "record",
            "repeat",
            "begin",
            "end",

            // Node.js
            "console",
            "exports",
            "process",
            "Buffer",
            "setTimeout",
            "clearTimeout",
            "setInterval",
            "cleanInterval",
            "setImmediate",
            "clearImmediate",
            "__filename__",
            "__dirname__",

            // PHP
            "__halt_compiler",
            "callable",
            "elseif",
            "empty",
            "enddeclare",
            "endfor",
            "endforeach",
            "endif",
            "endswitch",
            "endwhile",
            "include_once",
            "insteadof",
            "isset",
            "require_once",

            // Perl
            "__DATA__",
            "__END__",
            "__FILE__",
            "__LINE__",
            "__PACKAGE__",
            "__SUB__",
            "cmp",
            "eq",
            "elsif",
            "eq",
            "ge",
            "last",
            "le",
            "lt",
            "ne",
            "no",
            "or",
            "sub",

            // Swift
            "associativity",
            "didSet",
            "final",
            "get",
            "infix",
            "inout",
            "lazy",
            "left",
            "mutating",
            "none",
            "nonmutating",
            "operator",
            "override",
            "postfix",
            "precedence",
            "prefix",
            "Protocol",
            "repeat",
            "required",
            "right",
            "Self",
            "self",
            "set",
            "Type",
            "unowned",
            "weak",
            "willSet",

            // GoLang
            "chan",
            "defer",
            "fallthrough",
            "func",
            "go",

            // Algol
            "fi",
            "od",
            "procedure",
            "integer",
            "real",

            //  COBOL
            "ADD",
            "CALL",
            "CANCEL",
            "CLOSE",
            "DELETE",
            "DISPLAY",
            "DIVIDE",
            "EVALUATE",
            "EXIT",
            "FILE",
            "GOBACK",
            "IDENTIFICATION",
            "IF",
            "INITIALIZE",
            "INPUT",
            "INSPECT",
            "LINKAGE",
            "MERGE",
            "MOVE",
            "MULTIPLY",
            "OPEN",
            "PERFORM",
            "PROCEDURE",
            "REDEFINES",
            "RETURN",
            "SECTION",
            "SET",
            "SPACE",
            "SORT",
            "STOP",
            "STRING",
            "SUBTRACT",
            "UNSTRING",
            "USE",
            "WRITE"
        )

        internal val delimiters = listOf(
            ";",
            "{",
            "}",
            "[",
            "]",
            "(",
            ")",
            ":",
            "*",
            "#",
            "!",
            "?",
            "!!",
            "$",
            ".",
            ",",
            "\"",
            "”",
            "(*",
            "//",
            "::",
            "'",
            "..",
            "..=",
            "+",
            "-",
            "%",
            ",",
            "&",
            "&&",
            "|",
            "||",
            ">",
            "<",
            "->",
            "<-", 
            "=",
            "!=",
            "==",
            "===",
            "/",
            "+=",
            "-=",
            "*=",
            "**",
            ");",
            "/**",
            "};",
            "/*",
            "*/",
        )

        internal val operators = listOf(
            "*",
            "=",
            "-",
            "+",
            "%",
            "/",
            ">",
            "<",
            "!=",
            "-=",
            "+=",
            "*=",
            "!",
            "&&",
            "&",
            "|",
            "||",
            "->",
            "**"
        )

        internal val can_start_with =
            listOf("//", "#", "(*", ";", "{", "[", "_", "/*", "--", "<?", "$", "*", "!", ".", "/**", "@", "|", "%")
        internal val can_be_the_only_element =
            listOf("*/", ")", ");", "}", "};", ";", "{", "(", "//", "/*", "[", "]", "/**")
    }
}